<?php

namespace common\helpers;

class LangHelper
{
    public static function generatePassword($number)
    {
        $arr = array('a','b','c','d','e','f',
            'g','h','i','j','k','l',
            'm','n','o','p','r','s',
            't','u','v','x','y','z',
            'A','B','C','D','E','F',
            'G','H','I','J','K','L',
            'M','N','O','P','R','S',
            'T','U','V','X','Y','Z',
            '1','2','3','4','5','6',
            '7','8','9','0');

        $pass = "";
        for($i = 0; $i < $number; $i++)
        {
            $index = rand(0, count($arr) - 1);
            $pass .= $arr[$index];
        }
        return $pass;
    }


    public static function transliterate($input)
    {
        $gost = array(
            "Є"=>"YE","І"=>"I","Ѓ"=>"G","і"=>"i","№"=>"-","є"=>"ye","ѓ"=>"g",
            "А"=>"A","Б"=>"B","В"=>"V","Г"=>"G","Д"=>"D",
            "Е"=>"E","Ё"=>"YO","Ж"=>"ZH",
            "З"=>"Z","И"=>"I","Й"=>"J","К"=>"K","Л"=>"L",
            "М"=>"M","Н"=>"N","О"=>"O","П"=>"P","Р"=>"R",
            "С"=>"S","Т"=>"T","У"=>"U","Ф"=>"F","Х"=>"X",
            "Ц"=>"C","Ч"=>"CH","Ш"=>"SH","Щ"=>"SHH","Ъ"=>"'",
            "Ы"=>"Y","Ь"=>"","Э"=>"E","Ю"=>"YU","Я"=>"YA",
            "а"=>"a","б"=>"b","в"=>"v","г"=>"g","д"=>"d",
            "е"=>"e","ё"=>"yo","ж"=>"zh",
            "з"=>"z","и"=>"i","й"=>"j","к"=>"k","л"=>"l",
            "м"=>"m","н"=>"n","о"=>"o","п"=>"p","р"=>"r",
            "с"=>"s","т"=>"t","у"=>"u","ф"=>"f","х"=>"x",
            "ц"=>"c","ч"=>"ch","ш"=>"sh","щ"=>"shh","ъ"=>"",
            "ы"=>"y","ь"=>"","э"=>"e","ю"=>"yu","я"=>"ya"
        );
        return strtr($input, $gost);
    }

    public static function identRandom($n)
    {
        return strtolower(self::generatePassword($n));
    }

    /* создать уникальный идентификатор
   *
   */
    public static function uniqueIdent($name, $modelClass)
    {
        $ident =  self::transliterate($name);
        $ident = preg_replace('/[^a-zA-Z0-9\s_]/', '', $ident );
        $ident = str_replace(['_', ' '], '-', $ident);
        $ident = strtolower($ident);
        $s = $modelClass::find()->where(['ident' => $ident])->one();
        if ($s)
            $ident .= '-'.strtolower(self::generatePassword(3));
        return $ident;

    }

    public static function uniquePictName($name)
    {
        $ident =  self::transliterate($name);
        $ident = str_replace([' ','_','^',':', '!', '@','#','$','%','&','*','(',')',], ['-'], $ident);
        $ident = strtolower($ident);
        $ident .= '-'.strtolower(self::generatePassword(3));
        return $ident;

    }

}
